name: Scheduled benchmarking, reporting and publishing
on:
  schedule:
    # Run twice daily at 4:05 am and 8:05 pm
    - cron: '05 4,20 * * *'

    # For now, run more often so I can debug
    #- cron: '05 05,11,13,17,21 * * *'

jobs:
  gen_job_id:
    runs-on: ubuntu-latest
    outputs:
      ts: ${{ steps.step1.outputs.ts }}
    steps:
      - name: Generate a job ID
        id: step1
        run: |
          export TS=`date +"%Y-%m-%d-%H%M%S"`
          echo "::set-output name=ts::${TS}"
  benchmarks_x86:
    runs-on: ubuntu-latest
    needs: gen_job_id
    steps:
      - name: SSH to x86_64 CI instance to run benchmarks
        env:
          AWS_INSTANCE: ${{ secrets.CI_AWS_INSTANCE }}
          BENCH_TS: ${{ needs.gen_job_id.outputs.ts }}
        run: |
          set -e
          set -x
          cat << EOF > ./id_benchmark_ci_rsa
          ${{ secrets.AWS_INSTANCE_PRIVATE_KEY }}
          EOF
          chmod go-rwx ./id_benchmark_ci_rsa
          export SSH_ARGS="-o StrictHostKeyChecking=no -i ./id_benchmark_ci_rsa -o TCPKeepAlive=yes -o ServerAliveCountMax=20 -o ServerAliveInterval=15"
          ssh $SSH_ARGS ubuntu@$AWS_INSTANCE "cd ym/yjit-metrics && uname -a && git pull"
          ssh $SSH_ARGS ubuntu@$AWS_INSTANCE "bash -l -c '. ./ym/yjit-metrics/continuous_reporting/gh_tasks/fully_rebuild_rubies.sh'"
          ssh $SSH_ARGS ubuntu@$AWS_INSTANCE "bash -l -c '. ./ym/yjit-metrics/continuous_reporting/gh_tasks/run_benchmarks.sh'"
          rm -f id_benchmark_ci_rsa
  benchmarks_arm:
    runs-on: ubuntu-latest
    needs: gen_job_id
    steps:
      - name: SSH to AARCH64 CI instance to run benchmarks
        env:
          AWS_INSTANCE: ${{ secrets.CI_AWS_ARM_INSTANCE }}
          BENCH_TS: ${{ needs.gen_job_id.outputs.ts }}
        run: |
          set -e
          set -x
          cat << EOF > ./id_benchmark_ci_rsa
          ${{ secrets.AWS_INSTANCE_PRIVATE_KEY }}
          EOF
          chmod go-rwx ./id_benchmark_ci_rsa
          export SSH_ARGS="-o StrictHostKeyChecking=no -i ./id_benchmark_ci_rsa -o TCPKeepAlive=yes -o ServerAliveCountMax=20 -o ServerAliveInterval=15"
          ssh $SSH_ARGS ubuntu@$AWS_INSTANCE "cd ym/yjit-metrics && uname -a && git pull"
          ssh $SSH_ARGS ubuntu@$AWS_INSTANCE "bash -l -c '. ./ym/yjit-metrics/continuous_reporting/gh_tasks/fully_rebuild_rubies.sh'"
          ssh $SSH_ARGS ubuntu@$AWS_INSTANCE "bash -l -c '. ./ym/yjit-metrics/continuous_reporting/gh_tasks/run_benchmarks.sh'"
          rm -f id_benchmark_ci_rsa
  benchmarks_test_reports_x86:
    runs-on: ubuntu-latest
    needs: benchmarks_x86
    steps:
      - name: SSH to x86_64 CI instance to test benchmark data files are valid
        env:
          AWS_INSTANCE: ${{ secrets.CI_AWS_INSTANCE }}
        run: |
          set -e
          set -x
          cat << EOF > ./id_benchmark_ci_rsa
          ${{ secrets.AWS_INSTANCE_PRIVATE_KEY }}
          EOF
          chmod go-rwx ./id_benchmark_ci_rsa
          export SSH_ARGS="-o StrictHostKeyChecking=no -i ./id_benchmark_ci_rsa -o TCPKeepAlive=yes -o ServerAliveCountMax=20 -o ServerAliveInterval=15"
          ssh $SSH_ARGS ubuntu@$AWS_INSTANCE "cd ym/yjit-metrics && uname -a && git pull"
          # TODO: when we have better ARM64 reporting, change this to check_reporting, not check_reporting_minimal
          ssh $SSH_ARGS ubuntu@$AWS_INSTANCE "bash -l -c '. ./ym/yjit-metrics/continuous_reporting/gh_tasks/check_reporting_minimal.sh'"
          rm -f id_benchmark_ci_rsa
  benchmarks_test_reports_arm:
    runs-on: ubuntu-latest
    needs: benchmarks_arm
    steps:
      - name: SSH to AARCH64 CI instance to validate benchmark data files
        env:
          AWS_INSTANCE: ${{ secrets.CI_AWS_ARM_INSTANCE }}
        run: |
          set -e
          set -x
          cat << EOF > ./id_benchmark_ci_rsa
          ${{ secrets.AWS_INSTANCE_PRIVATE_KEY }}
          EOF
          chmod go-rwx ./id_benchmark_ci_rsa
          export SSH_ARGS="-o StrictHostKeyChecking=no -i ./id_benchmark_ci_rsa -o TCPKeepAlive=yes -o ServerAliveCountMax=20 -o ServerAliveInterval=15"
          ssh $SSH_ARGS ubuntu@$AWS_INSTANCE "cd ym/yjit-metrics && uname -a && git pull"
          ssh $SSH_ARGS ubuntu@$AWS_INSTANCE "bash -l -c '. ./ym/yjit-metrics/continuous_reporting/gh_tasks/check_reporting_minimal.sh'"
          rm -f id_benchmark_ci_rsa
  benchmarks_checkin_arm:
    runs-on: ubuntu-latest
    needs: [benchmarks_test_reports_arm]
    steps:
      - name: SSH to AARCH64 CI instance and commit/push benchmark raw data
        env:
          BENCHMARK_CI_GITHUB_TOKEN: ${{ secrets.BENCHMARK_CI_GITHUB_TOKEN }}
          AWS_INSTANCE: ${{ secrets.CI_AWS_ARM_INSTANCE }}
        run: |
          set -e
          set -x
          cat << EOF > ./id_benchmark_ci_rsa
          ${{ secrets.AWS_INSTANCE_PRIVATE_KEY }}
          EOF
          chmod go-rwx ./id_benchmark_ci_rsa
          export SSH_ARGS="-o StrictHostKeyChecking=no -i ./id_benchmark_ci_rsa -o TCPKeepAlive=yes -o ServerAliveCountMax=20 -o ServerAliveInterval=15"
          ssh $SSH_ARGS ubuntu@$AWS_INSTANCE "cd ym/yjit-metrics-pages && git remote set-url origin https://$BENCHMARK_CI_GITHUB_TOKEN@github.com/Shopify/yjit-metrics"
          ssh $SSH_ARGS ubuntu@$AWS_INSTANCE "cd ym/yjit-metrics-pages && git branch --set-upstream-to=origin/pages pages"
          ssh $SSH_ARGS ubuntu@$AWS_INSTANCE "cd ym/yjit-metrics-pages && git pull && git add raw_benchmark_data && git commit -m 'AARCH64 benchmark results' && git push --allow-empty"
          rm -f id_benchmark_ci_rsa
  reporting_and_upload:
    runs-on: ubuntu-latest
    needs: [benchmarks_test_reports_x86, benchmarks_checkin_arm]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main
      - name: SSH to x86_64 CI instance to run reports and upload results
        env:
          BENCHMARK_CI_GITHUB_TOKEN: ${{ secrets.BENCHMARK_CI_GITHUB_TOKEN }}
        run: |
          set -e
          set -x
          export AWS_INSTANCE=${{ secrets.CI_AWS_INSTANCE }}
          cat << EOF > ./id_benchmark_ci_rsa
          ${{ secrets.AWS_INSTANCE_PRIVATE_KEY }}
          EOF
          chmod go-rwx ./id_benchmark_ci_rsa
          export SSH_ARGS="-o StrictHostKeyChecking=no -i ./id_benchmark_ci_rsa -o TCPKeepAlive=yes -o ServerAliveCountMax=20 -o ServerAliveInterval=15"
          ssh $SSH_ARGS ubuntu@$AWS_INSTANCE "cd ym/yjit-metrics-pages && git remote set-url origin https://$BENCHMARK_CI_GITHUB_TOKEN@github.com/Shopify/yjit-metrics"
          ssh $SSH_ARGS ubuntu@$AWS_INSTANCE "cd ym/yjit-metrics-pages && git branch --set-upstream-to=origin/pages pages"
          ssh $SSH_ARGS ubuntu@$AWS_INSTANCE "cd ym/yjit-metrics && git pull"
          # For now, multiplatform reporting is broken! Don't check in wrong results!
          #ssh $SSH_ARGS ubuntu@$AWS_INSTANCE "bash -l -c 'BENCHMARK_CI_GITHUB_TOKEN=$BENCHMARK_CI_GITHUB_TOKEN ./ym/yjit-metrics/continuous_reporting/gh_tasks/report_and_upload.sh'"
